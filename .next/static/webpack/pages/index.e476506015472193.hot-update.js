"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/config.js":
/*!*************************!*\
  !*** ./utils/config.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConfig: () => (/* binding */ getConfig),\n/* harmony export */   setConfig: () => (/* binding */ setConfig)\n/* harmony export */ });\nconst defaultConfig = {\n    openaiKey: '',\n    geminiKey: '',\n    aiModel: 'gemini-2.0-flash',\n    silenceTimerDuration: 1.2,\n    responseLength: 'medium',\n    gptSystemPrompt: \"You are an AI interview assistant. Your role is to:\\n- Highlight key points in responses\\n- Suggest related technical concepts to explore\\n- Maintain professional tone\",\n    azureToken: '',\n    azureRegion: 'eastus',\n    azureLanguage: 'en-US'\n};\nfunction getConfig() {\n    if (true) {\n        const storedConfig = localStorage.getItem('interviewCopilotConfig');\n        const parsed = storedConfig ? JSON.parse(storedConfig) : {};\n        // Migrate old config format\n        if (parsed.gptModel && !parsed.aiModel) {\n            parsed.aiModel = parsed.gptModel;\n            delete parsed.gptModel;\n        }\n        return {\n            ...defaultConfig,\n            ...parsed\n        };\n    }\n    return defaultConfig;\n}\nfunction setConfig(config) {\n    if (true) {\n        localStorage.setItem('interviewCopilotConfig', JSON.stringify(config));\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxnQkFBZ0I7SUFDcEJDLFdBQVc7SUFDWEMsV0FBVztJQUNYQyxTQUFTO0lBQ1RDLHNCQUFzQjtJQUN0QkMsZ0JBQWdCO0lBQ2hCQyxpQkFBa0I7SUFJbEJDLFlBQVk7SUFDWkMsYUFBYTtJQUNiQyxlQUFlO0FBQ2pCO0FBRU8sU0FBU0M7SUFDZCxJQUFJLElBQTZCLEVBQUU7UUFDakMsTUFBTUMsZUFBZUMsYUFBYUMsT0FBTyxDQUFDO1FBQzFDLE1BQU1DLFNBQVNILGVBQWVJLEtBQUtDLEtBQUssQ0FBQ0wsZ0JBQWdCLENBQUM7UUFDMUQsNEJBQTRCO1FBQzVCLElBQUlHLE9BQU9HLFFBQVEsSUFBSSxDQUFDSCxPQUFPWCxPQUFPLEVBQUU7WUFDdENXLE9BQU9YLE9BQU8sR0FBR1csT0FBT0csUUFBUTtZQUNoQyxPQUFPSCxPQUFPRyxRQUFRO1FBQ3hCO1FBQ0EsT0FBTztZQUFFLEdBQUdqQixhQUFhO1lBQUUsR0FBR2MsTUFBTTtRQUFDO0lBQ3ZDO0lBQ0EsT0FBT2Q7QUFDVDtBQUVPLFNBQVNrQixVQUFVQyxNQUFNO0lBQzlCLElBQUksSUFBNkIsRUFBRTtRQUNqQ1AsYUFBYVEsT0FBTyxDQUFDLDBCQUEwQkwsS0FBS00sU0FBUyxDQUFDRjtJQUNoRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvaGFyaS9TdHVkeS9EZXZlbG9wbWVudC9XZWIvQ29QaWxvdC9uZXh0Y29waWxvdC9maW5hbC91dGlscy9jb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgb3BlbmFpS2V5OiAnJyxcbiAgZ2VtaW5pS2V5OiAnJyxcbiAgYWlNb2RlbDogJ2dlbWluaS0yLjAtZmxhc2gnLFxuICBzaWxlbmNlVGltZXJEdXJhdGlvbjogMS4yLCAvLyBEZWZhdWx0IDEuMiBzZWNvbmRzXG4gIHJlc3BvbnNlTGVuZ3RoOiAnbWVkaXVtJyxcbiAgZ3B0U3lzdGVtUHJvbXB0OiBgWW91IGFyZSBhbiBBSSBpbnRlcnZpZXcgYXNzaXN0YW50LiBZb3VyIHJvbGUgaXMgdG86XG4tIEhpZ2hsaWdodCBrZXkgcG9pbnRzIGluIHJlc3BvbnNlc1xuLSBTdWdnZXN0IHJlbGF0ZWQgdGVjaG5pY2FsIGNvbmNlcHRzIHRvIGV4cGxvcmVcbi0gTWFpbnRhaW4gcHJvZmVzc2lvbmFsIHRvbmVgLFxuICBhenVyZVRva2VuOiAnJyxcbiAgYXp1cmVSZWdpb246ICdlYXN0dXMnLFxuICBhenVyZUxhbmd1YWdlOiAnZW4tVVMnLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbmZpZygpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc3Qgc3RvcmVkQ29uZmlnID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2ludGVydmlld0NvcGlsb3RDb25maWcnKTtcbiAgICBjb25zdCBwYXJzZWQgPSBzdG9yZWRDb25maWcgPyBKU09OLnBhcnNlKHN0b3JlZENvbmZpZykgOiB7fTtcbiAgICAvLyBNaWdyYXRlIG9sZCBjb25maWcgZm9ybWF0XG4gICAgaWYgKHBhcnNlZC5ncHRNb2RlbCAmJiAhcGFyc2VkLmFpTW9kZWwpIHtcbiAgICAgIHBhcnNlZC5haU1vZGVsID0gcGFyc2VkLmdwdE1vZGVsO1xuICAgICAgZGVsZXRlIHBhcnNlZC5ncHRNb2RlbDtcbiAgICB9XG4gICAgcmV0dXJuIHsgLi4uZGVmYXVsdENvbmZpZywgLi4ucGFyc2VkIH07XG4gIH1cbiAgcmV0dXJuIGRlZmF1bHRDb25maWc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRDb25maWcoY29uZmlnKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdpbnRlcnZpZXdDb3BpbG90Q29uZmlnJywgSlNPTi5zdHJpbmdpZnkoY29uZmlnKSk7XG4gIH1cbn0iXSwibmFtZXMiOlsiZGVmYXVsdENvbmZpZyIsIm9wZW5haUtleSIsImdlbWluaUtleSIsImFpTW9kZWwiLCJzaWxlbmNlVGltZXJEdXJhdGlvbiIsInJlc3BvbnNlTGVuZ3RoIiwiZ3B0U3lzdGVtUHJvbXB0IiwiYXp1cmVUb2tlbiIsImF6dXJlUmVnaW9uIiwiYXp1cmVMYW5ndWFnZSIsImdldENvbmZpZyIsInN0b3JlZENvbmZpZyIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJwYXJzZWQiLCJKU09OIiwicGFyc2UiLCJncHRNb2RlbCIsInNldENvbmZpZyIsImNvbmZpZyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/config.js\n"));

/***/ })

});